######################################################################
# Automatically generated by qmake (2.01a) Tue Oct 6 19:48:14 2009
# but modified by me to accomodate for the includes for qwt, hamlib and
# portaudio
######################################################################

TEMPLATE	= app
TARGET		= dabscanner

QT		+= widgets 
CONFIG		+= console
QMAKE_CXXFLAGS	+= -std=c++11
QMAKE_CFLAGS	+=  -O3 -ffast-math
QMAKE_CXXFLAGS	+=  -O3 -ffast-math
#QMAKE_CFLAGS	+=  -g
#QMAKE_CXXFLAGS	+=  -g
#QMAKE_LFLAGS	+=  -g
QMAKE_CXXFLAGS += -isystem $$[QT_INSTALL_HEADERS]

TRANSLATIONS = i18n/de_DE.ts i18n/it_IT.ts i18n/hu_HU.ts

DEPENDPATH += . \
	       ../ \
	       ../library \
	       ../library/includes \
	       ../library/includes/ofdm \
	       ../library/includes/backend \
	       ../library/includes/backend/audio \
	       ../library/includes/backend/data \
	       ../library/includes/backend/data/mot \
	       ../library/includes/backend/data/journaline \
	       ../library/includes/support 

INCLUDEPATH += . \
	       ../ \
	       ../library \
	       ../library/includes \
	       ../library/includes/ofdm \
	       ../library/includes/backend \
	       ../library/includes/backend/audio \
	       ../library/includes/backend/data \
	       ../library/includes/backend/data/mot \
	       ../library/includes/backend/data/journaline \
	       ../library/includes/support \
	       /usr/include/ 

# Input
HEADERS += ./ringbuffer.h \
	   ./dab_tables.h \
	   ./service-printer.h \
	   ../dab-api.h \
	   ../device-handler.h \
	   ../library/includes/dab-constants.h \
	   ../library/includes/dab-processor.h \
	   ../library/includes/ofdm/phasereference.h \
	   ../library/includes/ofdm/phasetable.h \
	   ../library/includes/ofdm/freq-interleaver.h \
	   ../library/includes/ofdm/timesyncer.h \
	   ../library/includes/ofdm/fic-handler.h \
	   ../library/includes/ofdm/fib-processor.h \
	   ../library/includes/ofdm/sample-reader.h \
	   ../library/includes/backend/firecode-checker.h \
	   ../library/includes/backend/backend-base.h \
	   ../library/includes/backend/charsets.h \
	   ../library/includes/backend/galois.h \
	   ../library/includes/backend/reed-solomon.h \
	   ../library/includes/backend/msc-handler.h \
	   ../library/includes/backend/virtual-backend.h \
	   ../library/includes/backend/audio-backend.h \
	   ../library/includes/backend/data-backend.h \
	   ../library/includes/backend/audio/faad-decoder.h \
	   ../library/includes/backend/audio/mp4processor.h \
	   ../library/includes/backend/audio/mp2processor.h \
	   ../library/includes/backend/data/virtual-datahandler.h \
	   ../library/includes/backend/data/tdc-datahandler.h \
	   ../library/includes/backend/data/pad-handler.h \
	   ../library/includes/backend/data/data-processor.h \
	   ../library/includes/backend/data/mot/mot-handler.h \
	   ../library/includes/backend/data/mot/mot-dir.h \
	   ../library/includes/backend/data/mot/mot-object.h \
	   ../library/includes/support/band-handler.h 

SOURCES += ./main.cpp \
	   ./dab_tables.cpp \
	   ./service-printer.cpp \
	   ../devices/device-handler.cpp \
	   ../library/dab-api.cpp \
	   ../library/src/dab-processor.cpp \
	   ../library/src/ofdm/ofdm-decoder.cpp \
	   ../library/src/ofdm/phasereference.cpp \
	   ../library/src/ofdm/phasetable.cpp \
	   ../library/src/ofdm/freq-interleaver.cpp \
	   ../library/src/ofdm/timesyncer.cpp \
	   ../library/src/ofdm/sample-reader.cpp \
	   ../library/src/ofdm/fib-processor.cpp \
	   ../library/src/ofdm/fic-handler.cpp \
	   ../library/src/backend/firecode-checker.cpp \
	   ../library/src/backend/backend-base.cpp \
	   ../library/src/backend/charsets.cpp \
	   ../library/src/backend/galois.cpp \
	   ../library/src/backend/reed-solomon.cpp \
	   ../library/src/backend/msc-handler.cpp \
	   ../library/src/backend/virtual-backend.cpp \
	   ../library/src/backend/audio-backend.cpp \
	   ../library/src/backend/data-backend.cpp \
	   ../library/src/backend/audio/mp4processor.cpp \
	   ../library/src/backend/audio/mp2processor.cpp \
	   ../library/src/backend/data/virtual-datahandler.cpp \
	   ../library/src/backend/data/tdc-datahandler.cpp \
	   ../library/src/backend/data/pad-handler.cpp \
	   ../library/src/backend/data/data-processor.cpp \
	   ../library/src/backend/data/mot/mot-handler.cpp \
	   ../library/src/backend/data/mot/mot-dir.cpp \
	   ../library/src/backend/data/mot/mot-object.cpp \
	   ../library/src/support/band-handler.cpp \
	   ../library/src/support/viterbi-handler.cpp \
	   ../library/src/support/protTables.cpp \
	   ../library/src/support/protection.cpp \
	   ../library/src/support/eep-protection.cpp \
	   ../library/src/support/uep-protection.cpp \
	   ../library/src/support/fft_handler.cpp \
	   ../library/src/support/dab-params.cpp \
	   ../library/src/support/tii_table.cpp 

#
#	for unix systems this is about it. Adapt when needed for naming
#	and locating libraries. If you do not need a device as
#	listed, just comment the line out.
#
unix {
DESTDIR		= ./linux-bin
exists ("./.git") {
   GITHASHSTRING = $$system(git rev-parse --short HEAD)
   !isEmpty(GITHASHSTRING) {
       message("Current git hash = $$GITHASHSTRING")
       DEFINES += GITHASH=\\\"$$GITHASHSTRING\\\"
   }
}
isEmpty(GITHASHSTRING) {
    DEFINES += GITHASH=\\\"------\\\"
}

INCLUDEPATH	+= /usr/local/include
#INCLUDEPATH	+= /usr/local/include /usr/include/qt4/qwt /usr/include/qt5/qwt /usr/include/qt4/qwt /usr/include/qwt /usr/local/qwt-6.1.4-svn/

LIBS		+= -lfftw3f  -lusb-1.0 -ldl  #
LIBS		+= -lportaudio
LIBS		+= -lz
LIBS		+= -lsndfile
LIBS		+= -lsamplerate
LIBS		+= -lfaad
#LIBS		+= -lqwt-qt5

#
# comment or uncomment for the devices you want to have support for
# (you obviously have libraries installed for the selected ones)
#CONFIG		+= dabstick
CONFIG		+= sdrplay
#CONFIG		+= airspy
#CONFIG		+= hackrf	
#if you want to listen remote, uncomment
#CONFIG		+= tcp-streamer		# use for remote listening
#otherwise, if you want to use the default qt way of soud out
#CONFIG		+= qt-audio
#comment both out if you just want to use the "normal" way

#for the raspberry you definitely want this one
#when this one is enabled, load is spread over different threads
DEFINES	+= __THREADED_BACKEND

#and this one is experimental
DEFINES		+= PRESET_NAME
}
#
# an attempt to have it run under W32 through cross compilation
win32 {
DESTDIR		= ../../windows-bin
# includes in mingw differ from the includes in fedora linux

exists ("./.git") {
   GITHASHSTRING = $$system(git rev-parse --short HEAD)
   !isEmpty(GITHASHSTRING) {
       message("Current git hash = $$GITHASHSTRING")
       DEFINES += GITHASH=\\\"$$GITHASHSTRING\\\"
   }
}
isEmpty(GITHASHSTRING) {
    DEFINES += GITHASH=\\\"------\\\"
}

INCLUDEPATH += /usr/i686-w64-mingw32/sys-root/mingw/include
#INCLUDEPATH += /usr/i686-w64-mingw32/sys-root/mingw/include/qt5/qwt
INCLUDEPATH	+= /mingw32/include
#INCLUDEPATH	+= /mingw32/include/qwt
LIBS		+= -L/usr/i686-w64-mingw32/sys-root/mingw/lib
#LIBS		+= -lqwt-qt5
LIBS		+= -lfftw3f
LIBS		+= -lportaudio
LIBS		+= -lsndfile
LIBS		+= -lsamplerate
LIBS		+= -lole32
LIBS		+= -lwinpthread
LIBS		+= -lwinmm
LIBS 		+= -lstdc++
LIBS		+= -lws2_32
LIBS		+= -lfaad
LIBS		+= -lusb-1.0
LIBS		+= -lz

#CONFIG		+= airspy
#CONFIG		+= dabstick
CONFIG		+= sdrplay
#CONFIG		+= hackrf

#for the raspberry you definitely want this one
#when this one is enabled, load is spread over different threads
DEFINES	+= __THREADED_BACKEND

#and this one is experimental
# DEFINES		+= PRESET_NAME

}

#	devices
#
#	dabstick
dabstick {
	DEFINES		+= HAVE_RTLSDR
	DEPENDPATH	+= ./devices/rtlsdr-handler
	INCLUDEPATH	+= ./devices/rtlsdr-handler
	HEADERS		+= ./devices/rtlsdr-handler/rtlsdr-handler.h 
	SOURCES		+= ./devices/rtlsdr-handler/rtlsdr-handler.cpp 
}
#
#	the SDRplay
#
sdrplay {
	DEFINES		+= HAVE_SDRPLAY
	DEPENDPATH	+= ../devices/sdrplay-handler 
	INCLUDEPATH	+= ../devices/sdrplay-handler 
	HEADERS		+= ../devices/sdrplay-handler/sdrplay-handler.h 
	SOURCES		+= ../devices/sdrplay-handler/sdrplay-handler.cpp 
}
#
#
# airspy support
#
airspy {
	DEFINES		+= HAVE_AIRSPY
	DEPENDPATH	+= ./devices/airspy 
	INCLUDEPATH	+= ./devices/airspy-handler \
	                   ./devices/airspy-handler/libairspy
	HEADERS		+= ./devices/airspy-handler/airspy-handler.h \
	                   ./devices/airspy-handler/airspyfilter.h \
	                   ./devices/airspy-handler/libairspy/airspy.h
	SOURCES		+= ./devices/airspy-handler/airspy-handler.cpp \
	                   ./devices/airspy-handler/airspyfilter.cpp
}
#
#       the HACKRF One
#
hackrf {
        DEFINES         += HAVE_HACKRF
        DEPENDPATH      += ./devices/hackrf-handler
        INCLUDEPATH     += ./devices/hackrf-handler
        HEADERS         += ./devices/hackrf-handler/hackrf-handler.h
        SOURCES         += ./devices/hackrf-handler/hackrf-handler.cpp
}
#

#
rtl_tcp {
	DEFINES		+= HAVE_RTL_TCP
	QT		+= network
	INCLUDEPATH	+= ./devices/rtl_tcp
	HEADERS		+= ./devices/rtl_tcp/rtl_tcp_client.h
	SOURCES		+= ./devices/rtl_tcp/rtl_tcp_client.cpp
	FORMS		+= ./devices/rtl_tcp/rtl_tcp-widget.ui
}

qt-audio	{
	DEFINES		+= QT_AUDIO
	QT		+= multimedia
	HEADERS		+= ./includes/output/Qt-audio.h \
	                   ./includes/output/Qt-audiodevice.h
	SOURCES		+= ./src/output/Qt-audio.cpp \
	                   ./src/output/Qt-audiodevice.cpp
}

